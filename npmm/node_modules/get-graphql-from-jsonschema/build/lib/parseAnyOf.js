"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAnyOf = void 0;
const errors_1 = require("./errors");
const parseSchema_1 = require("./parseSchema");
const toBreadcrumb_1 = require("./toBreadcrumb");
const parseAnyOf = function ({ path, schema, direction }) {
    if (!schema.anyOf) {
        throw new errors_1.errors.SchemaInvalid(`Property 'anyOf' at '${toBreadcrumb_1.toBreadcrumb(path)}' is missing.`);
    }
    if (!Array.isArray(schema.anyOf)) {
        throw new errors_1.errors.SchemaInvalid(`Property 'anyOf' at '${toBreadcrumb_1.toBreadcrumb(path)}' should be an array.`);
    }
    const graphqlTypeDefinitions = [], graphqlTypeNames = [];
    schema.anyOf.forEach((subSchema, index) => {
        const result = parseSchema_1.parseSchema({ schema: subSchema, direction, path: [...path, `I${index}`] });
        graphqlTypeNames.push(result.typeName);
        graphqlTypeDefinitions.push(...result.typeDefinitions);
    });
    const graphqlTypeName = graphqlTypeNames.
        filter((name) => name.trim() !== '').
        join(' | ');
    return {
        typeName: graphqlTypeName,
        typeDefinitions: graphqlTypeDefinitions
    };
};
exports.parseAnyOf = parseAnyOf;
